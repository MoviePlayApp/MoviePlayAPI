{
  "openapi": "3.0.3",
  "info": {
    "title": "MoviePlay",
    "description": "This API provides the data required for the MovePlay Mobile App",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "User Authentication",
      "description": "Authentication and User Data related endpoints"
    },
    {
      "name": "Movies",
      "description": "Movie data related endpoints"
    },
    {
      "name": "User",
      "description": "User data related endpoints"
    }
  ],
  "servers": [
    {
      "url": "movie-play-api.demo.com"
    }
  ],
  "paths": {
    "/login": {
      "summary": "This path is used to retrieve data from the user, given the external login",
      "post": {
        "summary": "This request saves the login attempt and brings the user's data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Authentication"
        ]
      }
    },
    "/logout": {
      "summary": "This path is used to finish the session, given the external login",
      "post": {
        "summary": "This request finishes the actual session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logoutRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Authentication"
        ]
      }
    },
    "/refreshToken": {
      "summary": "This path is used to refresh the jwt token",
      "post": {
        "summary": "This request refreshes the jwt token using the refresh token, must be authenticated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refreshTokenRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refreshTokenResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User Authentication"
        ]
      }
    },
    "/users/me/likedMovies": {
      "summary": "This path is used to retrieve the movies the user likes. Must be authenticated to be used",
      "get": {
        "summary": "This request shows the user's liked movies",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMoviesDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/users/me": {
      "summary": "This path is used to retrieve the user's data. Must be authenticated to be used",
      "get": {
        "summary": "This request shows the user's data",
        "description": "This request shows the user data",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMeResponseDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponseDTO"
                }
              }
            }
          }
        },
        "tags": ["User"]
      },
      "delete": {
        "summary": "This request deletes the user from the database",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "This request modifies the user's data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putUserRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/putUserResponseDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/movies": {
      "summary": "This path is used to retrieve lists of current movies. Must be authenticated to be used",
      "get": {
        "summary": "This endpoint shows an array of movies. Is paginated",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMoviesDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 30
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "query",
            "name": "orderByDate",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dateAsc",
                "dateDsc"
              ]
            }
          },          {
            "in": "query",
            "name": "orderByRate",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "rateAsc",
                "rateDsc"
              ]
            }
          },
          {
            "in": "query",
            "name": "genre",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "tags": [
          "Movies"
        ]
      }
    },
    "/movies/{movieID}": {
      "summary": "This path is used to retrieve a movie's data",
      "get": {
        "summary": "This endpoint shows the data of the movie referred in the path variable movieID",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMovieByIdDTO"
                }
              }
            }
          },
          "404": {
            "description": "Movie Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovieIdNotFoundErrorResponseDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "movieID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "tags": [
          "Movies"
        ]
      }
    },
    "/users/me/likeMovie": {
      "summary": "This path is used to persist the action of liking a movie",
      "put": {
        "summary": "This endpoint is used to persist a like on a movie",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postLikeInMovieDTO"
                }
              }
            }
          },
          "404": {
            "description": "Movie Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovieIdNotFoundErrorResponseDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postLikeInMovieDTO"
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/movies/{movieID}/rate": {
      "summary": "This path is used to persist the action of liking a movie",
      "post": {
        "summary": "This endpoint is used to persist a like on a movie",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postRateInMovieRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postRateInMovieResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Movie Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovieIdNotFoundErrorResponseDTO"
                }
              }
            }
          },
          "5XX": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseDTO"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "movieID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Movies"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "loginResponseDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "mail": {
            "type": "string",
            "format": "email"
          },
          "imageUri": {
            "type": "string",
            "format": "uri"
          },
          "token": {
            "type": "string",
            "format": "jwt"
          },
          "refreshToken": {
            "type": "string",
            "format": "jwt"
          }
        },
        "example": {
          "userId": "39c6cddc-6502-4cc8-8313-79af3ff68a94",
          "name": "Emilia Diaz",
          "nickname": "Emi",
          "mail": "emiliadiaz@gmail.com",
          "imageUri": "../profilePictures/39c6cddc-6502-4cc8-8313-79af3ff68a94.png",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzOWM2Y2RkYy02NTAyLTRjYzgtODMxMy03OWFmM2ZmNjhhOTQiLCJuYW1lIjoiRW1pbGlhIERpYXoiLCJuaWNrbmFtZSI6IkVtaSIsIm1haWwiOiJlbWlsaWFkaWF6QGdtYWlsLmNvbSJ9.KXXPUdMUptbtc5LNOKnoyB4yFtezhxaS-n4JEuPbI5s",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzOWM2Y2RkYy02NTAyLTRjYzgtODMxMy03OWFmM2ZmNjhhOTQiLCJuYW1lIjoiRW1pbGlhIERpYXoiLCJuaWNrbmFtZSI6IkVtaSIsIm1haWwiOiJlbWlsaWFkaWF6QGdtYWlsLmNvbSJ9.KXXPUdMUptbtc5LNOKnoyB4yFtezhxaS-n4JEuPbI5s"
        }
      },
      "loginRequestDTO": {
        "type": "object",
        "properties": {
          "mail": {
            "type": "string",
            "format": "email"
          },
          "googleIdToken": {
            "type": "string"
          }
        },
        "example": {
          "mail": "emiliadiaz@gmail.com",
          "googleIdToken": "eyJ1c2VySWQiOiIzOWM2Y2RkYy02NTAyLTRjYzgtODMxMy03OWFmM2ZmNjhhOTQiLCJuYW1lIjoiRW1pbGlhIERpYXoiLCJuaWNrbmFtZSI6IkVtaSIsIm1haWwiOiJlbWlsaWFkaWF6QGdtYWlsLmNvbSJ9"
        }
      },
      "logoutRequestDTO": {
        "type": "object",
        "properties": {
          "mail": {
            "type": "string",
            "format": "email"
          }
        },
        "example": {
          "mail": "emiliadiaz@gmail.com"
        }
      },
      "logoutResponseDTO": {
        "type": "object",
        "properties": {
          "mail": {
            "type": "string"
          }
        },
        "example": {
          "status": "Success"
        }
      },
      "refreshTokenRequestDTO": {
        "type": "object",
        "properties": {
          "mail": {
            "type": "string",
            "format": "email"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "example": {
          "mail": "emiliadiaz@gmail.com",
          "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzOWM2Y2RkYy02NTAyLTRjYzgtODMxMy03OWFmM2ZmNjhhOTQiLCJuYW1lIjoiRW1pbGlhIERpYXoiLCJuaWNrbmFtZSI6IkVtaSIsIm1haWwiOiJlbWlsaWFkaWF6QGdtYWlsLmNvbSJ9.KXXPUdMUptbtc5LNOKnoyB4yFtezhxaS-n4JEuPbI5s"
        }
      },
      "refreshTokenResponseDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "token": {
            "type": "string",
            "format": "jwt"
          }
        },
        "example": {
          "status": "success",
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIzOWM2Y2RkYy02NTAyLTRjYzgtODMxMy03OWFmM2ZmNjhhOTQiLCJuYW1lIjoiRW1pbGlhIERpYXoiLCJuaWNrbmFtZSI6IkVtaSIsIm1haWwiOiJlbWlsaWFkaWF6QGdtYWlsLmNvbSJ9.KXXPUdMUptbtc5LNOKnoyB4yFtezhxaS-n4JEuPbI5s"
        }
      },
      "UnauthorizedResponseDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "example": {
          "error": "Unauthorized",
          "description": "You have no authorization. Please authenticate and try again."
        }
      },
      "InternalServerErrorResponseDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "example": {
          "error": "Internal Server Error",
          "description": "There was a problem with the application server. Please try again later"
        }
      },
      "NotFoundErrorResponseDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "example": {
          "error": "Not Found",
          "description": "The resource you are trying to reach was not found"
        }
      },
      "MovieIdNotFoundErrorResponseDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "example": {
          "error": "Movie Not Found",
          "description": "The ID you are trying to use was not found in the available movies"
        }
      },
      "movieHomeAndSearchDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "imageUri": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "id": "d579bf26-a492-4589-b9f3-2548b7f6cf12",
          "imageUri": "../image1.png"
        }
      },
      "getMoviesDTO": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/movieHomeAndSearchDTO"
        },
        "minItems": 1,
        "maxItems": 30,
        "example": [
          {
            "id": "d579bf26-a492-4589-b9f3-2548b7f6cf12",
            "imageUri": "../image1.png"
          },
          {
            "id": "e11cf04f-c362-4daf-9ba5-988de1638807",
            "imageUri": "../image2.png"
          },
          {
            "id": "25d1bc57-8a4d-47a9-bddd-f1da80023dce",
            "imageUri": "../image3.png"
          }
        ]
      },
      "putUserRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "required": [
              "true"
            ]
          },
          "nickname": {
            "type": "string",
            "required": [
              "false"
            ]
          },
          "imageUri": {
            "type": "string",
            "format": "uri",
            "required": [
              "false"
            ]
          }
        },
        "example": {
          "name": "Maria Diaz",
          "nickname": "Mari"
        }
      },
      "putUserResponseDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "mail": {
            "type": "string",
            "format": "email"
          },
          "imageUri": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "userId": "39c6cddc-6502-4cc8-8313-79af3ff68a94",
          "name": "Maria Diaz",
          "nickname": "Mari",
          "mail": "emiliadiaz@gmail.com",
          "imageUri": "../profilePictures/39c6cddc-6502-4cc8-8313-79af3ff68a94.png"
        }
      },
      "getMovieByIdDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "synopsis": {
            "type": "string"
          },
          "genre": {
              "type": "string"
          },
          "director": {
            "type": "string"
          },
          "actors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "releaseYear": {
            "type": "string",
            "format": "dateYear"
          },
          "duration": {
            "type": "string",
            "format": "time"
          },
          "imageUri": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "trailerUri": {
            "type": "string",
            "format": "uri"
          },
          "rateAverage": {
            "type": "number",
            "format": "float",
            "maximum": 5
          },
          "isLiked": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "83d3c8ff-61dd-45e2-9ba1-fd4339e3c71b",
          "title": "Kung Fu Panda 4",
          "synopsis": "After Po is tapped to become the Spiritual Leader of the Valley of Peace, he needs to find and train a new Dragon Warrior, while a wicked sorceress plans to re-summon all the master villains whom Po has vanquished to the spirit realm.",
          "genre": [
            "Animation",
            "Action",
            "Adventure"
          ],
          "releaseYear": "2024",
          "duration": "1h34m",
          "imageUri": [
            "../Kung-Fu-Panda-4/image1.png",
            "../Kung-Fu-Panda-4/image2.png",
            "../Kung-Fu-Panda-4/image3.png"
          ],
          "trailer": "../Kung-Fu-Panda-4/trailer.mp4",
          "rateAverage": 6.5,
          "isLiked": true
        }
      },
      "postLikeInMovieDTO": {
        "type": "object",
        "properties": {
          "movieId": {
            "type": "string",
            "format": "uuid"
          },
          "isLiked": {
            "type": "boolean"
          }
        },
        "example": {
          "movieId": "3b20eb60-adbf-41e4-a070-1f659f539960",
          "isLiked": true
        }
      },
      "postRateInMovieResponseDTO": {
        "type": "object",
        "properties": {
          "movieId": {
            "type": "string",
            "format": "uuid"
          },
          "rate": {
            "type": "number",
            "format": "float"
          }
        },
        "example": {
          "movieId": "f579beea-c0ec-4b6f-a780-0783e8d286f8",
          "rate": 4
        }
      },
      "postRateInMovieRequestDTO": {
        "type": "object",
        "properties": {
          "rateValue": {
            "type": "integer",
            "maximum": 5,
            "minimum": 0
          }
        },
        "example": {
          "rateValue": 4
        }
      },
      "getMeResponseDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "nickname": {
            "type": "string"
          },
          "mail": {
            "type": "string",
            "format": "email"
          },
          "imageUri": {
            "type": "string",
            "format": "uri"
          }
        },
        "example": {
          "userId": "39c6cddc-6502-4cc8-8313-79af3ff68a94",
          "name": "Emilia Diaz",
          "nickname": "Emi",
          "mail": "emiliadiaz@gmail.com",
          "imageUri": "../profilePictures/39c6cddc-6502-4cc8-8313-79af3ff68a94.png"
        }
      }
    }
  },
  "security": [
    {
      "BasicAuth": []
    }
  ]
}